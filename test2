router.post('/fbpartners/bulkcontacts', function (req, res) {
    new drvalidate(req, res, function (err, _session) {
        if (!err) {
            if(_session.bank== 'Finbot'){
                var file_name = req.body.filename;
                if (file_name) {
                    var contacts = path.join('./fbpartners/', _session.bank, 'contacts', file_name);
                    
                var assigned='',assignedfor=''
                if(_session.role=='TE'){
                    assigned=1,
                    assignedfor=_session.email
                }
                    let stream = fs.createReadStream(contacts);
                    let csvData = [];
                    let csvStream = fastcsv.parse().on("data", function (data) {
                        csvData.push({
                            id: guidGenerator(),
                            tenant_id: _session.tenant_id,
                            bankname: _session.bank,
                            name: data[0],
                            email: data[1],
                            phone: data[2],
                            city: data[3],
                            state: data[4],
                            phone2: data[5],
                            email2: data[6],
                            zone: data[7],
                            assigned: assigned,
                            assignedfor:assignedfor ,
                            PLCT: '',
                            DCT: '',
                            activity: [],
                            createddate: new Date(),
                            lstupdateddate: new Date(),
                            status: 1
                        });

                    }).on("end", async function () {
                        csvData.shift(); // remove the first line: header
                        // Removing Duplicate Objects From CSVData Array
                        var a = csvData.filter((v, i, a) => a.findIndex(t => (t.email === v.email || t.phone == v.phone)) === i);

                        if (Array.isArray(a) && a.length > 0) {
                            var count = 0;
                            await a.forEach(async function (e) {
                                fbbulkcontacts.findOne({
                                    tenant_id: _session.tenant_id,
                                    $or: [{
                                        'email': {
                                            $eq: e.email
                                        }
                                    }, {
                                        'phone': {
                                            $eq: e.phone
                                        }
                                    }]
                                }, async function (err, doc) {
                                    if (!err) {
                                        if (doc) {
                                        
                                        } else {
                                            var newcontact = new fbbulkcontacts({
                                                id: e.id,
                                                tenant_id: _session.tenant_id,
                                                bankname: _session.bank,
                                                name: e.name,
                                                email: e.email,
                                                phone: e.phone,
                                                city: e.city,
                                                state: e.state,
                                                phone2: e.phone2,
                                                email2: e.email2,
                                                zone: e.zone,
                                                assigned: e.assigned,
                                                assignedfor: e.assignedfor,
                                                PLCT: '',
                                                DCT: '',
                                                activity: [],
                                                createddate: e.createdate,
                                                lstupdateddate: e.createdate,
                                                status: 1
                                            });
                                            newcontact.save();
                                        }
                                    }
                                });
                                count++;
                                if (a.length == count) {
                                    res.sendStatus(200);
                                }
                            });
                        } else {
                            res.send('Empty Data is Present');
                        }
                    });
                    stream.pipe(csvStream);
                }else {
                    res.sendStatus(500);
                }
            } else {
                res.sendStatus(500);
            }
        } else {
            res.sendStatus(403);
        }
    });
});